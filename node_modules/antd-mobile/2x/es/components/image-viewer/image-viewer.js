import { withDefaultProps } from '../../utils/with-default-props';
import { renderToContainer } from '../../utils/render-to-container';
import Mask from '../mask';
import { Slide } from './slide';
import { Slides } from './slides';
import React, { useState, forwardRef, useImperativeHandle, createRef, useEffect } from 'react';
import { renderToBody } from '../../utils/render-to-body';
var classPrefix = "adm-image-viewer";
var defaultProps = {
  maxZoom: 3,
  getContainer: null,
  visible: false
};
export var ImageViewer = withDefaultProps(defaultProps)(function (props) {
  var node = /*#__PURE__*/React.createElement(Mask, {
    visible: props.visible,
    disableBodyScroll: false,
    opacity: 'thick',
    afterClose: props.afterClose
  }, /*#__PURE__*/React.createElement("div", {
    className: classPrefix + "-content"
  }, props.image && /*#__PURE__*/React.createElement(Slide, {
    image: props.image,
    onTap: function onTap() {
      var _a;

      (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
    },
    maxZoom: props.maxZoom
  })));
  return renderToContainer(props.getContainer, node);
});
var multiDefaultProps = Object.assign(Object.assign({}, defaultProps), {
  defaultIndex: 0
});
export var MultiImageViewer = withDefaultProps(multiDefaultProps)(function (props) {
  var node = /*#__PURE__*/React.createElement(Mask, {
    visible: props.visible,
    disableBodyScroll: false,
    opacity: 'thick',
    afterClose: props.afterClose
  }, /*#__PURE__*/React.createElement("div", {
    className: classPrefix + "-content"
  }, props.images && /*#__PURE__*/React.createElement(Slides, {
    defaultIndex: props.defaultIndex,
    onIndexChange: props.onIndexChange,
    images: props.images,
    onTap: function onTap() {
      var _a;

      (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
    },
    maxZoom: props.maxZoom
  })));
  return renderToContainer(props.getContainer, node);
});
export function showImageViewer(props) {
  var Wrapper = /*#__PURE__*/forwardRef(function (_, ref) {
    var _useState = useState(false),
        visible = _useState[0],
        setVisible = _useState[1];

    useEffect(function () {
      setVisible(true);
    }, []);
    useImperativeHandle(ref, function () {
      return {
        close: function close() {
          setVisible(false);
        }
      };
    });
    return /*#__PURE__*/React.createElement(ImageViewer, Object.assign({}, props, {
      visible: visible,
      onClose: function onClose() {
        var _a;

        (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
        setVisible(false);
      },
      afterClose: function afterClose() {
        var _a;

        (_a = props.afterClose) === null || _a === void 0 ? void 0 : _a.call(props);
        unmount();
      }
    }));
  });
  var ref = /*#__PURE__*/createRef();
  var unmount = renderToBody( /*#__PURE__*/React.createElement(Wrapper, {
    ref: ref
  }));
  return {
    close: function close() {
      var _a;

      (_a = ref.current) === null || _a === void 0 ? void 0 : _a.close();
    }
  };
}
export function showMultiImageViewer(props) {
  var Wrapper = /*#__PURE__*/forwardRef(function (_, ref) {
    var _useState2 = useState(false),
        visible = _useState2[0],
        setVisible = _useState2[1];

    useEffect(function () {
      setVisible(true);
    }, []);
    useImperativeHandle(ref, function () {
      return {
        close: function close() {
          setVisible(false);
        }
      };
    });
    return /*#__PURE__*/React.createElement(MultiImageViewer, Object.assign({}, props, {
      visible: visible,
      onClose: function onClose() {
        var _a;

        (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
        setVisible(false);
      },
      afterClose: function afterClose() {
        var _a;

        (_a = props.afterClose) === null || _a === void 0 ? void 0 : _a.call(props);
        unmount();
      }
    }));
  });
  var ref = /*#__PURE__*/createRef();
  var unmount = renderToBody( /*#__PURE__*/React.createElement(Wrapper, {
    ref: ref
  }));
  return {
    close: function close() {
      var _a;

      (_a = ref.current) === null || _a === void 0 ? void 0 : _a.close();
    }
  };
}