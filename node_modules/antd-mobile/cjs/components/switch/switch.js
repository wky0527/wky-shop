"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Switch = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _spin = _interopRequireDefault(require("../../assets/spin.svg"));

var _nativeProps = require("../../utils/native-props");

var _usePropsValue2 = require("../../utils/use-props-value");

var _withDefaultProps = require("../../utils/with-default-props");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var classPrefix = "adm-switch";
var defaultProps = {
  defaultChecked: false
};

var Switch = function Switch(p) {
  var _classNames;

  var props = (0, _withDefaultProps.mergeProps)(defaultProps, p);
  var disabled = props.disabled || props.loading || false;

  var _usePropsValue = (0, _usePropsValue2.usePropsValue)({
    value: props.checked,
    defaultValue: props.defaultChecked,
    onChange: props.onChange
  }),
      checked = _usePropsValue[0],
      setChecked = _usePropsValue[1];

  return (0, _nativeProps.withNativeProps)(props, /*#__PURE__*/_react["default"].createElement("label", {
    className: (0, _classnames["default"])(classPrefix, (_classNames = {}, _classNames[classPrefix + "-checked"] = checked, _classNames[classPrefix + "-disabled"] = disabled, _classNames))
  }, /*#__PURE__*/_react["default"].createElement("input", {
    type: 'checkbox',
    checked: checked,
    onChange: function onChange(e) {
      disabled || setChecked(e.target.checked);
    },
    disabled: disabled
  }), /*#__PURE__*/_react["default"].createElement("div", {
    className: classPrefix + "-checkbox"
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: classPrefix + "-handle"
  }, // 禁用状态优先于加载状态
  props.disabled || props.loading && /*#__PURE__*/_react["default"].createElement("img", {
    src: _spin["default"],
    className: classPrefix + "-icon"
  })), /*#__PURE__*/_react["default"].createElement("div", {
    className: classPrefix + "-inner"
  }, checked ? props.checkedText : props.uncheckedText))));
};

exports.Switch = Switch;