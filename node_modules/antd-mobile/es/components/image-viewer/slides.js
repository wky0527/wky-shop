import React from 'react';
import { useDrag } from '@use-gesture/react';
import { useSpring, animated } from '@react-spring/web';
import { Slide } from './slide';
import { convertPx } from '../../utils/convert-px';
import { bound } from '../../utils/bound';
var classPrefix = "adm-image-viewer";
export var Slides = function Slides(props) {
  var slideWidth = window.innerWidth + convertPx(16);

  var _useSpring = useSpring(function () {
    return {
      x: -props.defaultIndex * slideWidth,
      config: {
        tension: 300
      }
    };
  }),
      x = _useSpring[0].x,
      api = _useSpring[1];

  var count = props.images.length;
  var bind = useDrag(function (state) {
    var _state$offset = state.offset,
        offsetX = _state$offset[0];

    if (state.last) {
      var index = bound(-Math.round((offsetX + state.velocity[0] * state.direction[0] * 100) / slideWidth), 0, count - 1);
      api.start({
        x: index * -slideWidth
      });
    } else {
      api.start({
        x: offsetX
      });
    }
  }, {
    from: function from() {
      return [x.get(), 0];
    },
    bounds: function bounds() {
      var index = -Math.round(x.get() / slideWidth);
      return {
        right: Math.max(index - 1, 0) * -slideWidth,
        left: Math.min(index + 1, count - 1) * -slideWidth
      };
    },
    rubberband: true,
    axis: 'x'
  });
  return /*#__PURE__*/React.createElement("div", Object.assign({
    className: classPrefix + "-slides"
  }, bind()), /*#__PURE__*/React.createElement(animated.div, {
    className: classPrefix + "-indicator"
  }, x.to(function (v) {
    var index = -Math.round(v / slideWidth);
    return index + 1 + " / " + count;
  })), /*#__PURE__*/React.createElement(animated.div, {
    className: classPrefix + "-slides-inner",
    style: {
      x: x
    }
  }, props.images.map(function (image) {
    return /*#__PURE__*/React.createElement(Slide, {
      key: image,
      image: image,
      onTap: props.onTap,
      maxZoom: props.maxZoom,
      onZoomChange: function onZoomChange(zoom) {
        if (zoom !== 1) {
          var index = -Math.round(x.get() / slideWidth);
          api.start({
            x: index * -slideWidth
          });
        }
      }
    });
  })));
};